{"body":"Created because HttpSession is horrible, especially in Google AppEngine. Why store all data server side,\r\ntrying to keep every session in sync across multiple instances, caches, databases, when you\r\ncan safely store all this data on the client's side!\r\n\r\n[Download latest .jar here](https://github.com/SkPhilipp/JSCS/downloads)\r\n\r\nExample\r\n-------\r\n```java\r\n\r\nimport java.io.IOException;\r\nimport javax.servlet.http.HttpServlet;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\nimport skillable.jscs.ObjectSigner;\r\nimport skillable.jscs.SignedSession;\r\n\r\n@SuppressWarnings(\"serial\")\r\npublic class JscsServlet extends HttpServlet {\r\n\r\n\tprivate static final SignedSessionFactory factory = new SignedSessionFactory(\"CSPRNG Seed\", \"SessionCookie\", 0L);\r\n\t\r\n\t@Override\r\n\tpublic void doGet(HttpServletRequest req, HttpServletResponse resp) throws IOException{\r\n\t\tSignedSession session = factory.get(req);\r\n\t\tif(session.get(\"user\") != null){\r\n\t\t\tresp.getWriter().print(\"Welcome back, \" + session.get(\"user\"));\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsession.put(\"user\", \"philipp@skillable.eu\");\r\n\t\t\tsession.addCookie(resp);\r\n\t\t\tresp.getWriter().print(\"Welcome\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n```\r\n\r\nWarning\r\n-------\r\n1. It's a cookie, cookies are sent in headers, headers are sent before the body. You cant send a header anymore once you start with the body.\r\n2. Don't put sensitive data in it, it's a signed cookie, not an encrypted cookie.\r\n3. Don't put too much data in it, it's a cookie, and cookies are supposed to have a maximumsize of 4KB, the signature takes up quite some space, and Base64 encoding it makes this even longer, so don't be silly, keep the cookie small.","tagline":"Safely store session data on the client's side.","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-31675056-2","name":"JSCS"}